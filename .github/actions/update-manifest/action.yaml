name: Update File and Auto-Merge PR
description: 'This workflow updates a file in the repository and creates a pull request. It also enables auto-merge for the PR if possible.'
inputs:
  file_path:
    description: 'Path to the file to update'
    required: true
  app_name:
    description: 'Name of the application'
    required: true
  docker_repo_tag:
    description: 'Docker repository and tag'
    required: true
  manifest_path:
    description: 'Path to the manifest file'
    required: true
  branch_name:
    description: 'Name of the new branch'
    required: true
    default: 'automated-update'
  commit_message:
    description: 'Commit message'
    required: true
    default: 'Automated update of configuration file'
  pr_title:
    description: 'PR title'
    required: true
    default: 'Automated Update - Configuration File'
  gh_token:
    description: 'GitHub token for authentication'
    required: true
  pr_body:
    description: 'PR description'
    required: true
    default: 'This PR was automatically created to update the configuration file.'


runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Git Identity
      shell: bash
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
    - name: Create branch
      shell: bash
      run: |
        git checkout -b ${{ inputs.branch_name || 'automated-update' }}

    - name: Install yq
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y yq

    - name: Update file
      shell: bash
      run: |
        yq --arg IMAGE "${{ input.docker_repo_tag }}" '.spec.template.spec.containers[0].image = $IMAGE' ${{ inputs.manifest_path }}

    - name: Commit changes
      shell: bash
      run: |
        git add ${{ inputs.file_path || 'data/config.json' }}
        git commit -m "${{ inputs.commit_message || 'Automated update of configuration file' }}"
        
    - name: Push changes
      shell: bash
      run: |
        git push --set-upstream origin ${{ inputs.branch_name || 'automated-update' }}
        
    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ inputs.gh_token }}
        commit-message: ${{ inputs.commit_message || 'Automated update of configuration file' }}
        branch: ${{ inputs.branch_name || 'automated-update' }}
        delete-branch: true
        title: ${{ inputs.pr_title || 'Automated Update - Configuration File' }}
        body: ${{ inputs.pr_body || 'This PR was automatically created to update the configuration file.' }}
        
    - name: Enable Auto-Merge
      if: steps.create_pr.outputs.pull-request-number
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ inputs.gh_token }}
        pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
        merge-method: squash

    # Wait a bit before checking PR status
    - name: Wait for PR checks
      shell: bash
      run: sleep 30
      
    # Check status and merge if possible
    - name: Merge PR
      shell: bash
      if: steps.create_pr.outputs.pull-request-number
      run: |
        pr_number=${{ steps.create_pr.outputs.pull-request-number }}
        echo "Attempting to merge PR #$pr_number"
        gh pr merge $pr_number --merge --delete-branch
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
